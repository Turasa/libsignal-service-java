import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext.kotlin_version = '1.9.10'
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
            content {
                includeGroupByRegex "org\\.jlleitschuh\\.gradle.*"
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath libs.ktlint
        classpath ('com.squareup.wire:wire-gradle-plugin:4.4.3') {
            exclude group: 'com.squareup.wire', module: 'wire-swift-generator'
            exclude group: 'com.squareup.wire', module: 'wire-grpc-client'
            exclude group: 'com.squareup.wire', module: 'wire-grpc-jvm'
            exclude group: 'com.squareup.wire', module: 'wire-grpc-server-generator'
            exclude group: 'io.outfoxx', module: 'swiftpoet'
        }
        classpath files("$rootDir/wire-handler/wire-handler-1.0.0.jar")
    }
}

plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.3.0"
}

project.group = "com.github.turasa"

def getRepositoryUsername() {
    return hasProperty('whisperSonatypeUsername') ? whisperSonatypeUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('whisperSonatypePassword') ? whisperSonatypePassword : ""
}

nexusPublishing {
    repositories {
        sonatype {
            username = getRepositoryUsername()
            password = getRepositoryPassword()
        }
    }
}

ext.signalJavaVersion = JavaVersion.VERSION_11
ext.signalKotlinJvmTarget = "11"

ext.lib_signal_service_version_number = "2.15.3_unofficial_86"
ext.lib_signal_service_group_info     = "com.github.turasa"

allprojects {
    // Needed because otherwise the kapt task defaults to jvmTarget 17, which "poisons the well" and requires us to bump up too
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = signalKotlinJvmTarget
        }
    }
    tasks.withType(Jar).configureEach {
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }
}

subprojects {
    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }
}
